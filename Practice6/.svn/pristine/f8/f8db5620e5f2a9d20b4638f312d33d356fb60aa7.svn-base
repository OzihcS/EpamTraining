package ua.nure.piontkovskyi.Practice6.part7;


import java.util.Iterator;
import java.util.NoSuchElementException;

public class Range implements Iterable {

    private final boolean reverse;
    private int[] arr;

    public Range(int m, int n, boolean reverse) {
        this.reverse = reverse;
        if (n < m) {
            System.out.println("Illegal input!");
            return;
        }
        arr = new int[n - m + 1];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = m++;
        }
    }

    public void printArray() {
        Iterator it = iterator();
        while (it.hasNext()) {
            System.out.print(it.next() + " ");
        }
    }

    @Override
    public Iterator iterator() {
        return new RangeIterator();
    }

    private class RangeIterator implements Iterator {

        private int index;

        public RangeIterator() {
            if (reverse) {
                index = arr.length;
            } else {
                index = -1;
            }
        }

        @Override
        public boolean hasNext() {
            if (reverse) {
                if (index - 1 >= 0) {
                    return true;
                }
                throw new NoSuchElementException();
            }
            if (index + 1 < arr.length) {
                return true;
            }
            throw new NoSuchElementException();
        }

        @Override
        public Object next() {
            if (reverse) {
                index--;
                return arr[index];
            }
            index++;
            return arr[index];
        }

        @Override
        public void remove() {
            throw new UnsupportedOperationException();
        }
    }
}
